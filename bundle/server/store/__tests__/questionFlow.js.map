{"version":3,"sources":["../../../../server/store/__tests__/questionFlow.js"],"names":["jest","mock","REDISCLOUD_URL","LOCAL_FILE_STORE_PATH","sample_questions","fs","readJsonSync","sample_greeting_question","beforeAll","ensureDirSync","constant","outputJsonSync","test","thedh","theqf","theup","DataHandler","get","then","dh","getQuestionFlow","question_flow","expect","findQuestionWithQid","toBe","getUserProgress","user_progress_mgr","userProgress","stopAtQid","findNextQid","questions","push","save","data","length","toMatchObject","afterAll","removeSync"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;;;AAEAA,KAAKC,IAAL,CAAU,iBAAV,EAA6B,YAAM;AACjC,SAAO;AACLC,oBAAgB,EADX;AAELC,2BAAuB;AAFlB,GAAP;AAID,CALD;;AAOA,IAAIC,mBAAmBC,kBAAGC,YAAH,CAAgB,0CAAhB,CAAvB;;AAEA,IAAIC,2BAA2B;AAC7B,UAAQ,UADqB;AAE7B,UAAQ;AAFqB,CAA/B;;AAKAC,UAAU,YAAM;AACdH,oBAAGI,aAAH,CAAiBC,mBAASP,qBAA1B;AACAE,oBAAGM,cAAH,CACKD,mBAASP,qBADd,kCAEEC,gBAFF;AAID,CAND;;AAQAQ,KAAK,KAAL,EAAY,YAAM;AAChB,MAAIC,QAAQ,IAAZ;AACA,MAAIC,QAAQ,IAAZ;AACA,MAAIC,QAAQ,IAAZ;AACA,SAAOC,sBAAYC,GAAZ,GACJC,IADI,CACC,UAACC,EAAD,EAAQ;AACZN,YAAQM,EAAR;AACA,WAAOA,GAAGC,eAAH,EAAP;AACD,GAJI,EAKJF,IALI,CAKC,UAACG,aAAD,EAAmB;AACvBP,YAAQO,aAAR;AACAC,WAAOR,MAAMS,mBAAN,CAA0B,CAAC,CAA3B,CAAP,EAAsCC,IAAtC,CAA2C,IAA3C;AACAF,WAAOR,MAAMS,mBAAN,CAA0B,MAA1B,CAAP,EAA0CC,IAA1C,CAA+C,IAA/C;AACA,WAAOX,MAAMY,eAAN,CAAsB,CAAtB,CAAP;AACD,GAVI,EAWJP,IAXI,CAWC,UAACQ,iBAAD,EAAuB;AAC3BX,YAAQW,iBAAR;;AAEAX,UAAMY,YAAN,CAAmBC,SAAnB,GAA+B,CAA/B;AACAN,WAAOP,MAAMc,WAAN,CAAkBf,KAAlB,EAAyB,MAAzB,CAAP,EAAyCU,IAAzC,CAA8C,EAA9C;;AAEAT,UAAMY,YAAN,CAAmBC,SAAnB,GAA+B,CAA/B;AACAN,WAAOP,MAAMc,WAAN,CAAkBf,KAAlB,EAAyB,OAAzB,CAAP,EAA0CU,IAA1C,CAA+C,CAA/C;;AAEAT,UAAMY,YAAN,CAAmBC,SAAnB,GAA+B,CAA/B;AACAN,WAAOP,MAAMc,WAAN,CAAkBf,KAAlB,EAAyB,MAAzB,CAAP,EAAyCU,IAAzC,CAA8C,CAA9C;;AAEAT,UAAMY,YAAN,CAAmBC,SAAnB,GAA+B,EAA/B;AACAN,WAAOP,MAAMc,WAAN,CAAkBf,KAAlB,EAAyB,MAAzB,CAAP,EAAyCU,IAAzC,CAA8C,EAA9C;;AAEAV,UAAMgB,SAAN,CAAgBC,IAAhB,CAAqBxB,wBAArB;AACA,WAAOO,MAAMkB,IAAN,EAAP;AACD,GA5BI,EA6BJd,IA7BI,CA6BC,YAAM;AACV,QAAIe,OAAO5B,kBAAGC,YAAH,CACNI,mBAASP,qBADH,iCAAX;AAGAmB,WAAOW,KAAKA,KAAKC,MAAL,GAAY,CAAjB,CAAP,EAA4BC,aAA5B,CAA0C5B,wBAA1C;AACD,GAlCI,CAAP;AAmCD,CAvCD;;AAyCA6B,SAAS,YAAM;AACb/B,oBAAGgC,UAAH,CAAc3B,mBAASP,qBAAvB;AACD,CAFD","file":"questionFlow.js","sourcesContent":["import fs from 'fs-extra';\n\nimport constant from 'common/constant';\nimport DataHandler from 'server/store/DataHandler';\n\njest.mock('common/constant', () => {\n  return {\n    REDISCLOUD_URL: '',\n    LOCAL_FILE_STORE_PATH: './var/data_test_question_flow',\n  };\n});\n\nlet sample_questions = fs.readJsonSync('./sample/data/question_flow_default.json');\n\nlet sample_greeting_question = {\n  'type': 'greeting',\n  'text': '5 4th with u!'\n};\n\nbeforeAll(() => {\n  fs.ensureDirSync(constant.LOCAL_FILE_STORE_PATH);\n  fs.outputJsonSync(\n    `${constant.LOCAL_FILE_STORE_PATH}/question_flow_default.json`, \n    sample_questions,\n  );\n});\n\ntest('all', () => {\n  let thedh = null;\n  let theqf = null;\n  let theup = null;\n  return DataHandler.get()\n    .then((dh) => {\n      thedh = dh;\n      return dh.getQuestionFlow();\n    })\n    .then((question_flow) => {\n      theqf = question_flow;\n      expect(theqf.findQuestionWithQid(-1)).toBe(null);\n      expect(theqf.findQuestionWithQid(100000)).toBe(null);\n      return thedh.getUserProgress(4);\n    })\n    .then((user_progress_mgr) => {\n      theup = user_progress_mgr;\n      \n      theup.userProgress.stopAtQid = 3;\n      expect(theup.findNextQid(theqf, '1.No')).toBe(19);\n\n      theup.userProgress.stopAtQid = 3;\n      expect(theup.findNextQid(theqf, '0.Yes')).toBe(4);\n\n      theup.userProgress.stopAtQid = 2;\n      expect(theup.findNextQid(theqf, '1.No')).toBe(3);\n\n      theup.userProgress.stopAtQid = 19;\n      expect(theup.findNextQid(theqf, '1.No')).toBe(21);\n\n      theqf.questions.push(sample_greeting_question);\n      return theqf.save();\n    })\n    .then(() => {\n      let data = fs.readJsonSync(\n        `${constant.LOCAL_FILE_STORE_PATH}/question_flow_default.json`,\n      );\n      expect(data[data.length-1]).toMatchObject(sample_greeting_question);\n    });\n});\n\nafterAll(() => {\n  fs.removeSync(constant.LOCAL_FILE_STORE_PATH);\n});\n"]}