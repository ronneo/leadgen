{"version":3,"sources":["../../../server/authEndpoint/system.js"],"names":["init","app","dh","post","req","res","pageID","body","page_id","fbrequest","get","uri","constant","GRAPH_BASE_URL","qs","grant_type","client_id","FB_APP_ID","client_secret","FB_APP_SECRET","fb_exchange_token","access_token","then","bodyobj","user_access_token","fields","page_access_token","getAccessToken","access_token_mgr","update","PAGE_ACCESS_TOKEN_KEY","sendStatus","catch","err","logger","error","JSON","stringify","FBGraphHelper","subscribeWebhooks","page","status","fbtrEvents","LEADGENBOT_CONNECT_PAGE"],"mappings":";;;;;QAMgBA,I,GAAAA,I;;AANhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,SAASA,IAAT,CAAcC,GAAd,EAAmBC,EAAnB,EAAuB;AAC5BD,MAAIE,IAAJ,CAAS,eAAT,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACtC,QAAIC,SAASF,IAAIG,IAAJ,CAASC,OAAtB;;AAEA;AACA;AACAC,wBAAUC,GAAV,CAAc;AACZC,WAAQC,mBAASC,cAAjB,wBADY;AAEZC,UAAI;AACFC,oBAAY,mBADV;AAEFC,mBAAWJ,mBAASK,SAFlB;AAGFC,uBAAeN,mBAASO,aAHtB;AAIFC,2BAAmBhB,IAAIG,IAAJ,CAASc;AAJ1B;AAFQ,KAAd,EASCC,IATD,CASM,UAACC,OAAD,EAAa;AACjB,UAAIC,oBAAoBD,QAAQF,YAAhC;AACA,aAAOZ,oBAAUC,GAAV,CAAc;AACnBC,aAAQC,mBAASC,cAAjB,SAAmCP,MADhB;AAEnBQ,YAAI;AACFW,kBAAQ,cADN;AAEFJ,wBAAcG;AAFZ;AAFe,OAAd,CAAP;AAOD,KAlBD,EAmBCF,IAnBD,CAmBM,UAACC,OAAD,EAAa;AACjB,UAAIG,oBAAoBH,QAAQF,YAAhC;AACAnB,SAAGyB,cAAH,GACGL,IADH,CACQ,UAACM,gBAAD,EAAsB;AAC1BA,yBAAiBC,MAAjB,qBAA2BjB,mBAASkB,qBAApC,EAA4DJ,iBAA5D,GACGJ,IADH,CACQ,YAAM;AACVjB,cAAI0B,UAAJ,CAAe,GAAf;AACD,SAHH,EAIGC,KAJH,CAIS,YAAM;AACX3B,cAAI0B,UAAJ,CAAe,GAAf;AACD,SANH;AAOD,OATH;AAUD,KA/BD,EAgCCC,KAhCD,CAgCO,UAACC,GAAD,EAAS;AACdC,uBAAOC,KAAP,8CAAwDC,KAAKC,SAAL,CAAeJ,GAAf,CAAxD;AACA5B,UAAI0B,UAAJ,CAAe,GAAf;AACD,KAnCD;AAoCD,GAzCD;;AA2CA9B,MAAIE,IAAJ,CAAS,iBAAT,EAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxCiC,4BAAcC,iBAAd,CAAgCnC,IAAIG,IAAJ,CAASiC,IAAzC,EACGlB,IADH,CACQ,YAAM;AACVjB,UAAI0B,UAAJ,CAAe,GAAf;AACD,KAHH,EAGK,YAAM;AACP1B,UAAIoC,MAAJ,CAAW,GAAX;AACD,KALH;AAMA,oBAAKC,iBAAWC,uBAAhB;AACD,GARD;AASD","file":"system.js","sourcesContent":["import FBGraphHelper from 'server/helper/FBGraphHelper';\nimport constant from 'common/constant';\nimport fbrequest from 'common/fbrequest';\nimport logger from 'common/logger';\nimport { fbtrEvents, fbtr } from 'common/fbtr';\n\nexport function init(app, dh) {\n  app.post('/access_token', (req, res) => {\n    let pageID = req.body.page_id;\n  \n    // We need to get a long-lived user access token before getting a long-lived\n    // page access token.\n    fbrequest.get({\n      uri: `${constant.GRAPH_BASE_URL}/oauth/access_token`,\n      qs: {\n        grant_type: 'fb_exchange_token',\n        client_id: constant.FB_APP_ID,\n        client_secret: constant.FB_APP_SECRET,\n        fb_exchange_token: req.body.access_token,\n      }\n    })\n    .then((bodyobj) => {\n      let user_access_token = bodyobj.access_token;\n      return fbrequest.get({\n        uri: `${constant.GRAPH_BASE_URL}/${pageID}`,\n        qs: {\n          fields: 'access_token',\n          access_token: user_access_token,\n        }\n      });\n    })\n    .then((bodyobj) => {\n      let page_access_token = bodyobj.access_token;\n      dh.getAccessToken()\n        .then((access_token_mgr) => {\n          access_token_mgr.update({ [constant.PAGE_ACCESS_TOKEN_KEY]: page_access_token })\n            .then(() => {\n              res.sendStatus(200);\n            })\n            .catch(() => {\n              res.sendStatus(500);\n            });\n        });\n    })\n    .catch((err) => {\n      logger.error(`Error while requesting to Facebook API, ${JSON.stringify(err)}`);\n      res.sendStatus(500);\n    });\n  });\n\n  app.post('/subscribe_page', (req, res) => {\n    FBGraphHelper.subscribeWebhooks(req.body.page)\n      .then(() => {\n        res.sendStatus(200);\n      }, () => {\n        res.status(404);\n      });\n    fbtr(fbtrEvents.LEADGENBOT_CONNECT_PAGE);\n  });\n}\n"]}