{"version":3,"sources":["../../../server/helper/ExpressHelper.js"],"names":["expressapp","cwd","logger","dirname","get_caller_info","Error","stack","split","trim","secureCheckMiddlewareForFollowingRoutes","enableSecureCheckForFollowingRoutes","middleware","disableSecureCheckForFollowingRoutes","get","post","put","delete","map","verb","expressFunc","path","args","caller_info","replace","includes","info","toUpperCase","apply"],"mappings":";;;;;;;;kBAAe,UAASA,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkC;AAC/C,MAAIC,UAAUF,GAAd;;AAEA,WAASG,eAAT,GAA2B;AACzB,WAAS,IAAIC,KAAJ,GAAYC,KAAb,CAAoBC,KAApB,CAA0B,KAA1B,EAAiC,CAAjC,CAAD,CAAsCC,IAAtC,EAAP;AACD;;AAEDR,aAAWS,uCAAX,GAAqD,IAArD;;AAEAT,aAAWU,mCAAX,GAAiD,UAACC,UAAD,EAAgB;AAC/DX,eAAWS,uCAAX,GAAqDE,UAArD;AACD,GAFD;;AAIAX,aAAWY,oCAAX,GAAkD,YAAM;AACtDZ,eAAWS,uCAAX,GAAqD,IAArD;AACD,GAFD;;AAIA,GACE,CAAC,KAAD,EAAQT,WAAWa,GAAnB,CADF,EAEE,CAAC,MAAD,EAASb,WAAWc,IAApB,CAFF,EAGE,CAAC,KAAD,EAAQd,WAAWe,GAAnB,CAHF,EAIE,CAAC,QAAD,EAAWf,WAAWgB,MAAtB,CAJF,EAKEC,GALF,CAKM,gBAAyB;AAAA;AAAA,QAAvBC,IAAuB;AAAA,QAAjBC,WAAiB;;AAC7BnB,eAAWkB,IAAX,IAAmB,UAACE,IAAD,EAAmB;AAAA,wCAATC,IAAS;AAATA,YAAS;AAAA;;AACpC,UAAIC,cAAclB,kBAAkBmB,OAAlB,CAA0BpB,OAA1B,EAAmC,EAAnC,EAAuCoB,OAAvC,CAA+C,SAA/C,EAA0D,EAA1D,CAAlB;AACA,UAAIvB,WAAWS,uCAAf,EAAwD;AACtD,YAAI,CAACa,YAAYE,QAAZ,CAAqB,cAArB,CAAL,EAA2C;AACzCtB,iBAAOuB,IAAP,gBAAyBP,KAAKQ,WAAL,EAAzB,UAAgDN,IAAhD,wBAAuEE,WAAvE;AACD;AACDH,oBAAYQ,KAAZ,CAAkB3B,UAAlB,GAA+BoB,IAA/B,EAAqCpB,WAAWS,uCAAhD,SAA4FY,IAA5F;AACD,OALD,MAKO;AACL,YAAI,CAACC,YAAYE,QAAZ,CAAqB,cAArB,CAAL,EAA2C;AACzCtB,iBAAOuB,IAAP,gBAAyBP,KAAKQ,WAAL,EAAzB,UAAgDN,IAAhD,wBAAuEE,WAAvE;AACD;AACDH,oBAAYQ,KAAZ,CAAkB3B,UAAlB,GAA+BoB,IAA/B,SAAwCC,IAAxC;AACD;AACF,KAbD;AAcD,GApBD;;AAsBA,SAAOrB,UAAP;AACD,C","file":"ExpressHelper.js","sourcesContent":["export default function(expressapp, cwd, logger) {\n  let dirname = cwd;\n\n  function get_caller_info() {\n    return ((new Error().stack).split('at ')[3]).trim();\n  }\n\n  expressapp.secureCheckMiddlewareForFollowingRoutes = null;\n\n  expressapp.enableSecureCheckForFollowingRoutes = (middleware) => {\n    expressapp.secureCheckMiddlewareForFollowingRoutes = middleware;\n  };\n\n  expressapp.disableSecureCheckForFollowingRoutes = () => {\n    expressapp.secureCheckMiddlewareForFollowingRoutes = null;\n  };\n\n  [\n    ['get', expressapp.get],\n    ['post', expressapp.post],\n    ['put', expressapp.put],\n    ['delete', expressapp.delete],\n  ].map(([verb, expressFunc]) => {\n    expressapp[verb] = (path, ...args) => {\n      let caller_info = get_caller_info().replace(dirname, '').replace('file://', '');\n      if (expressapp.secureCheckMiddlewareForFollowingRoutes) {\n        if (!caller_info.includes('node_modules')) {\n          logger.info(`endpoint {${verb.toUpperCase()}, ${path}} is defined by ${caller_info} with secure check.`);\n        }\n        expressFunc.apply(expressapp, [path, expressapp.secureCheckMiddlewareForFollowingRoutes, ...args]);\n      } else {\n        if (!caller_info.includes('node_modules')) {\n          logger.info(`endpoint {${verb.toUpperCase()}, ${path}} is defined by ${caller_info}`);\n        }\n        expressFunc.apply(expressapp, [path, ...args]);\n      }\n    };\n  });\n\n  return expressapp;\n}\n"]}