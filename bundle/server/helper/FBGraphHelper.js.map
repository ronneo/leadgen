{"version":3,"sources":["../../../server/helper/FBGraphHelper.js"],"names":["url","FBGraphHelper","params","access_token","constant","FB_APP_ACCESS_TOKEN","app_domains","parse","HEROKU_APP_URL","hostname","website_url","logger","info","JSON","stringify","fbrequest","post","uri","GRAPH_BASE_URL","FB_APP_ID","json","then","_body","catch","err","error","stack","page","options","object","callback_url","WEBHOOK_PATH","fields","verify_token","WEBHOOK_VERIFY_TOKEN","id"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;IAAYA,G;;;;;;;;IAESC,a;;;;;;;oCAEI;AACrB,UAAIC,SAAS;AACXC,sBAAcC,mBAASC,mBADZ;AAEXC,qBAAa,CAACN,IAAIO,KAAJ,CAAUH,mBAASI,cAAnB,EAAmCC,QAApC,CAFF;AAGXC,qBAAaN,mBAASI;AAHX,OAAb;AAKAG,uBAAOC,IAAP,6BAAsCR,mBAASI,cAA/C,qBAA6EK,KAAKC,SAAL,CAAeZ,MAAf,CAA7E;AACA,aAAOa,oBAAUC,IAAV,CAAe;AACpBC,aAAQb,mBAASc,cAAjB,SAAmCd,mBAASe,SADxB;AAEpBC,cAAMlB;AAFc,OAAf,EAINmB,IAJM,CAID,UAACC,KAAD,EAAW;AACfX,yBAAOC,IAAP,CAAY,iBAAZ;AACD,OANM,EAONW,KAPM,CAOA,UAACC,GAAD,EAAS;AACdb,yBAAOc,KAAP,kCAA4CD,GAA5C;AACA,YAAIA,IAAIE,KAAR,EAAe;AACbf,2BAAOc,KAAP,CAAaD,IAAIE,KAAjB;AACD;AACD,eAAOF,GAAP;AACD,OAbM,CAAP;AAcD;;;sCAEwBG,I,EAAM;AAC7B,UAAIC,UAAU;AACZX,aAAQb,mBAASc,cAAjB,SAAmCd,mBAASe,SAA5C,mBADY;AAEZC,cAAM;AACJjB,wBAAcC,mBAASC,mBADnB;AAEJwB,kBAAQ,MAFJ;AAGJC,wBAAc1B,mBAASI,cAAT,GAA0BJ,mBAAS2B,YAH7C;AAIJC,kBAAQ,CAAC,UAAD,EAAa,qBAAb,CAJJ;AAKJC,wBAAc7B,mBAAS8B;AALnB;AAFM,OAAd;AAUAvB,uBAAOC,IAAP,8CAAuDC,KAAKC,SAAL,CAAec,QAAQR,IAAvB,CAAvD;;AAEA,aAAOL,oBAAUC,IAAV,CAAeY,OAAf,EACJP,IADI,CACC,UAACC,KAAD,EAAW;AACfX,yBAAOC,IAAP,CAAY,wCAAZ;AACA,YAAIV,SAAS;AACXC,wBAAcwB,KAAKxB;AADR,SAAb;AAGAQ,yBAAOC,IAAP,2CAAoDC,KAAKC,SAAL,CAAeZ,MAAf,CAApD;AACA,eAAOa,oBAAUC,IAAV,CAAe;AACpBC,eAAQb,mBAASc,cAAjB,SAAmCS,KAAKQ,EAAxC,qBADoB;AAEpBf,gBAAMlB;AAFc,SAAf,CAAP;AAID,OAXI,EAYJmB,IAZI,CAYC,UAACC,KAAD,EAAW;AACfX,yBAAOC,IAAP,CAAY,qCAAZ;AACD,OAdI,EAeJW,KAfI,CAeE,UAACC,GAAD,EAAS;AACdb,yBAAOc,KAAP,wCAAkDZ,KAAKC,SAAL,CAAeU,GAAf,CAAlD;AACA,eAAOA,GAAP;AACD,OAlBI,CAAP;AAmBD;;;;;;kBAzDkBvB,a","file":"FBGraphHelper.js","sourcesContent":["import constant from 'common/constant';\nimport logger from 'common/logger';\nimport fbrequest from 'common/fbrequest';\nimport * as url from 'url';\n\nexport default class FBGraphHelper {\n\n  static setWebsiteURL() {\n    let params = {\n      access_token: constant.FB_APP_ACCESS_TOKEN,\n      app_domains: [url.parse(constant.HEROKU_APP_URL).hostname],\n      website_url: constant.HEROKU_APP_URL,\n    };\n    logger.info(`Setting Website URL to ${constant.HEROKU_APP_URL} with param: ${JSON.stringify(params)}`);\n    return fbrequest.post({\n      uri: `${constant.GRAPH_BASE_URL}/${constant.FB_APP_ID}`,\n      json: params,\n    })\n    .then((_body) => {\n      logger.info('Website URL set');\n    })\n    .catch((err) => {\n      logger.error(`Website URL setting failed: ${err}`);\n      if (err.stack) {\n        logger.error(err.stack);\n      }\n      return err;\n    });\n  }\n\n  static subscribeWebhooks(page) {\n    let options = {\n      uri: `${constant.GRAPH_BASE_URL}/${constant.FB_APP_ID}/subscriptions`,\n      json: {\n        access_token: constant.FB_APP_ACCESS_TOKEN,\n        object: 'page',\n        callback_url: constant.HEROKU_APP_URL + constant.WEBHOOK_PATH,\n        fields: ['messages', 'messaging_postbacks'],\n        verify_token: constant.WEBHOOK_VERIFY_TOKEN\n      },\n    };\n    logger.info(`Subscribing webhook events with params: ${JSON.stringify(options.json)}`);\n\n    return fbrequest.post(options)\n      .then((_body) => {\n        logger.info('Subscribed webhook events successfully');\n        let params = {\n          access_token: page.access_token,\n        };\n        logger.info(`Subscribing page to app with params: ${JSON.stringify(params)}`);\n        return fbrequest.post({\n          uri: `${constant.GRAPH_BASE_URL}/${page.id}/subscribed_apps`,\n          json: params,\n        });\n      })\n      .then((_body) => {\n        logger.info('Subscribed page to app successfully');\n      })\n      .catch((err) => {\n        logger.error(`Failed to subscribed page to app: ${JSON.stringify(err)}`);\n        return err;\n      });\n  }\n}\n"]}