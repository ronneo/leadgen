{"version":3,"sources":["../../common/fbrequest.js"],"names":["isObject","obj","Object","fbrequest","resolve","reject","args","request","then","body","bodyobj","JSON","parse","error","catch","err","get","options","Promise","method","post"],"mappings":";;;;;;;;AAAA;;;;;;AAEA;;;;;;;;;AASA,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;AACrB;AACA,SAAOA,QAAQC,OAAOD,GAAP,CAAf;AACD;;AAED,SAASE,SAAT,CAAmBC,OAAnB,EAA4BC,MAA5B,EAA6C;AAAA,oCAANC,IAAM;AAANA,QAAM;AAAA;;AAC3CC,4CAAWD,IAAX,EACGE,IADH,CACQ,UAACC,IAAD,EAAU;AACd,QAAIC,UAAU,IAAd;AACA,QAAIV,SAASS,IAAT,CAAJ,EAAoB;AAClBC,gBAAUD,IAAV;AACD,KAFD,MAEO;AACLC,gBAAUC,KAAKC,KAAL,CAAWH,IAAX,CAAV;AACD;AACD,QAAIC,QAAQG,KAAZ,EAAmB;AACjBR,aAAOK,QAAQG,KAAf;AACD,KAFD,MAEO;AACLT,cAAQM,OAAR;AACD;AACF,GAbH,EAcGI,KAdH,CAcS,UAACC,GAAD,EAAS;AACdV,WAAOU,GAAP;AACD,GAhBH;AAiBD;;kBAEc;AACbC,OAAK,aAACC,OAAD,EAAsB;AAAA,uCAATX,IAAS;AAATA,UAAS;AAAA;;AACzB,WAAO,IAAIY,OAAJ,CAAY,UAACd,OAAD,EAAUC,MAAV,EAAqB;AACtCF,kCAAUC,OAAV,EAAmBC,MAAnB,aAA4Bc,QAAQ,KAApC,IAA8CF,OAA9C,UAA2DX,IAA3D;AACD,KAFM,CAAP;AAGD,GALY;AAMbc,QAAM,cAACH,OAAD,EAAsB;AAAA,uCAATX,IAAS;AAATA,UAAS;AAAA;;AAC1B,WAAO,IAAIY,OAAJ,CAAY,UAACd,OAAD,EAAUC,MAAV,EAAqB;AACtCF,kCAAUC,OAAV,EAAmBC,MAAnB,aAA4Bc,QAAQ,MAApC,IAA+CF,OAA/C,UAA4DX,IAA5D;AACD,KAFM,CAAP;AAGD;AAVY,C","file":"fbrequest.js","sourcesContent":["import request from 'request-promise';\n\n/* liyuhk: for any request to Facebook Graph API endpoint, failures can be complex\n   case 1: can be normal HTTP err, like no connection, or can not resolve domain\n   case 2: can be error of incomplete HTTP body\n   case 3: can be error of Facebook platform, usually in HTTP we will get 200 OK, but the data is \n           like `{ error: {} }`\n   The wrapper in this file helps us to address these with 2 functions: get and post, they are \n   with the same useage of request-promise.\n*/\n\nfunction isObject(obj) {\n  // borrow from https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\n  return obj === Object(obj);\n}\n\nfunction fbrequest(resolve, reject, ...args) {\n  request(...args)\n    .then((body) => {\n      let bodyobj = null;\n      if (isObject(body)) {\n        bodyobj = body;\n      } else {\n        bodyobj = JSON.parse(body);\n      }\n      if (bodyobj.error) {\n        reject(bodyobj.error);\n      } else {\n        resolve(bodyobj);\n      }\n    })\n    .catch((err) => {\n      reject(err);\n    });\n}\n\nexport default {\n  get: (options, ...args) => {\n    return new Promise((resolve, reject) => {\n      fbrequest(resolve, reject, {method: 'GET', ...options}, ...args);\n    });\n  },\n  post: (options, ...args) => {\n    return new Promise((resolve, reject) => {\n      fbrequest(resolve, reject, {method: 'POST', ...options}, ...args);\n    });\n  },\n};\n"]}